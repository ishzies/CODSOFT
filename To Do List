#include <iostream>
#include <vector>
#include <string>

class TaskList {
public:
    void addTask(const std::string &task) {
        tasks.push_back(task);
        std::cout << "Task added: " << task << std::endl;
    }

    void removeTask(int index) {
        if (index >= 0 && index < tasks.size()) {
            std::cout << "Task removed: " << tasks[index] << std::endl;
            tasks.erase(tasks.begin() + index);
        } else {
            std::cout << "Invalid task index." << std::endl;
        }
    }

    void listTasks() {
        if (tasks.empty()) {
            std::cout << "Task list is empty." << std::endl;
        } else {
            std::cout << "Task List:" << std::endl;
            for (size_t i = 0; i < tasks.size(); ++i) {
                std::cout << i + 1 << ". " << tasks[i] << std::endl;
            }
        }
    }

private:
    std::vector<std::string> tasks;
};

int main() {
    TaskList toDoList;
    int choice;

    while (true) {
        std::cout << "To-Do List App" << std::endl;
        std::cout << "1. Add Task" << std::endl;
        std::cout << "2. Remove Task" << std::endl;
        std::cout << "3. List Tasks" << std::endl;
        std::cout << "4. Quit" << std::endl;
        std::cout << "Enter your choice: ";
        std::cin >> choice;

        switch (choice) {
            case 1:
                std::cout << "Enter the task to add: ";
                std::cin.ignore(); // Consume the newline character left in the buffer
                std::string task;
                std::getline(std::cin, task);
                toDoList.addTask(task);
                break;
            case 2:
                if (toDoList.listTasks(), toDoList.listTasks();)
                    break;
                std::cout << "Enter the task index to remove: ";
                int index;
                std::cin >> index;
                toDoList.removeTask(index - 1);
                break;
            case 3:
                toDoList.listTasks();
                break;
            case 4:
                std::cout << "Goodbye!" << std::endl;
                return 0;
            default:
                std::cout << "Invalid choice. Please try again." << std::endl;
        }
    }

    return 0;
}
